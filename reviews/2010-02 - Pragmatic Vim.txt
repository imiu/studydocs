*****************************************
***          Pragmatic Vim            ***
*** Based on screencasts and articles ***
*****************************************

**************
** Movement **
**************
$                   # End
^                   # Home (first symbol that is not a whitespace)
0                   # Home (first symbol)

w                   # Forward one word (start)
b                   # Backward one word (start)
e                   # Forward one word (end)
ge                  # Backward one word (end)

f<char>             # Forward to <char>
F<char>             # Backward to <char>
t<char>             # Forward till <char>
T<char>             # Backward till char
;                   # Repeat forward
,                   # Repeat backward

)                   # Sentence forward
(                   # Sentence backward
}                   # Paragraph forward
{                   # Paragraph forward

H                   # Move cursor to the head of the screen
M                   # Move cursor to the middle of the screen
L                   # Move cursor to the last line of the screen

<number>G           # To line <number>

Ctrl + b            # Full page up
Ctrl + u            # Half page up
Ctrl + y            # Scroll line up
Ctrl + f            # Full page down
Ctrl + d            # Half page down
Ctrl + e            # Scroll line down

G                   # End of file
gg                  # Start of file

zt (z)              # Show line on top (move cursor to line start)
zz (z.)             # Show line centered (move cursor to line start)

Ctrl + o            # Jump to prev. cursor point or execute one command in Insert mode
Ctrl + i            # Jump to next cursor  point
Ctrl + ]            # Follow the link
Ctrl + t            # Go back

aw                  # A word with whitespace
iw                  # In smth. or word without whitespace or current word
W                   # Non-blank characters
B                   # Block

****************************
** Editing in normal mode **
****************************
>>                  # Indent
<<                  # Unindent
==                  # Autoindent (can be done with objects like i} and others)
P                   # Paste above the current cursor position
Y,D,C               # Copy, Delete or Change the whole line

s                   # Remove symbol under cursor and go to insert mode
S                   # Rewrite the whole string
I                   # Prepend string with text (go to bol and insert mode)
A                   # Append string with text (go to eol and insert mode)

** Spelling **
:set spell!         # Toggle spell-ckecker
]s                  # Next misspell
[s                  # Prev misspell
z=                  # List of suggestions
1z=                 # Replace misspell with first suggestion
set spl=ru          # Set spelling language to russian
zg                  # Add word to white-list
zug                 # Remove word from white-list
zw                  # Add word to bad-word-list
zuw                 # Remove word from bad-word-list


**********************
** Search & Replace **
**********************
/                   # Start incremental search forward
?                   # Start incremental search backward
n                   # Next match
N                   # Previous match

*                   # Next occ. of the word under a cursor
g*                  # Next occ. of the word under a cursor (partial match allowed)
#                   # Prev occ. of the word under a cursor
g#                  # Prev occ. of the word under a cursor (partial match allowed)


***********
** Marks **
***********
ma                  # Set mark "a"
'a                  # Go to line with mark "a"
''                  # Go to mark of prev. cursor point
`a                  # Go exactly to mark "a" 


*************
** Buffers **
*************
:ls                 # List all the buffers
:bd                 # Delete current buffer
:b 4                # Switch to buffer #4
:b vim              # Switch to buffer with "vim" in a name
:b#                 # Switch to "alternate" buffer (toggle last 2 buffers)
Ctrl + ^            # It's actually Ctrl + 6 and does exactly the same thing as previous one


*************
** Windows **
*************
Ctrl + w c          # Close the window
Ctrl + w o          # Fullscreen the window
Ctrl + w s          # Split horizontally
Ctrl + w v          # Split vertically
Ctrl + w x          # Exchange content of two windows

Ctrl + w hjkl       # Move between the windows

Ctrl + w _          # Maximize current window vertically
Ctrl + w =          # Equalize windows by size

Ctrl + w +          # Increase vertical size
Ctrl + w -          # Decrease vertical size
Ctrl + w >          # Resize to the left
Ctrl + w <          # Resize to the right


**********
** Tabs **
**********
Ctrl + w T          # Open current window in separate tab
gt                  # Go to the next tab
2gt                 # Go to second tab!
gT                  # Go to the prev tab
:q                  # Exit current tab
:tabonly            # Close all tabs but the current
:tabmove 0          # Move current tab to 0 position (or to the end if no argument is presented)


*****************
** Insert Mode **
*****************
Ctrl + o            # Execute one command of normal mode
Ctrl + c            # Quit insert mode
Ctrl + h            # Backspace
Ctrl + u            # Delete everything before cursor
Ctrl + t            # Indent
Ctrl + d            # Outdent
Ctrl + w            # Delete previous word
Ctrl + x Ctrl + l   # Completion for a whole line
Ctrl + x Ctrl + f   # Complete a filename from a filesystem


*****************
** Visual mode **
*****************
Ctrl+v              # Go to block mode
I                   # Insert into several lines edit multiple lines
A                   # Append after every line
c                   # Change every line
r                   # Replace on every line
c                   # Change several lines
~, u, U             # Change the register
r(symbol)           # Replace all block with symbols
>, <                # Indent and unindent lines


********************
** Useful Options **
********************
set list!           # Toggle show/hide invisible symbols
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab


*********************
** Useful Commands **
*********************
** Editing **
:e!                         # Restore all changes to the buffer
:sp file.txt                # Split horizontally and load file.txt to edit
:vsp file.txt               # Split vertically and load file.txt to edit
:up file.txt                # Save visually selected lines to file
:enew                       # Create new empty buffers

set noexpandtab -> retab!   # Convert spaces to tabs
set expandtab   -> retab!   # Convert tabs to spaces
:%s/\s\+$//e                # Strip trailing spaces
:g/^$/d                     # Delete all empty lines
:s/\%V_/ /g                 # Modify ONLY visually selected block by \%V


********************
** Useful Plugins **
********************
** Netrw **
%                   # Create a new file
d                   # Create a new directory
R                   # Rename file
D                   # Delete file
s                   # Sorty-by
x                   # Exec a default action on this file

** Fugitive **
:Gread HEAD         # Brows the repo
:Glog               # Show log
:Gmove path         # git mv
:Gremove            # git rm



Ctrl+[              # Go back into normal mode. Also Esc can let you there.

### Normal Mode ###
i                   # Go into insert mode, where you can type text
gi                  # Go into insert mode, where you edited last time
/                   # Go to the search forward mode
?                   # Go to the search backward mode
:                   # Go into command mode
Ctrl+v              # Go into visual select mode
hjkl                # To travel left, down, up, right

Ctrl+d              # Page down
Ctrl+u              # Page up
i                   # Go to the insert mode and type on the left of your cursor in normal mode
a                   # Go to the insert mode and type on the right of your cursor in normal mode
x                   # Cut 1 character under the cursor (Like Delete)
X                   # Cut 1 character from the left (like BackSpace)
y(y,w,b,e,$,^)      # Copy whole line, next word, previous word, end of word, eol, sol
c(c,w,b,e,$,^)      # Change (delete and go into iMode) whole line, next word, prev word, end of word, eol, sol
C                   # Cut from here to the eol
ct(symbol)          # Change till "symbol"
ciw                 # Acts just like delete
ci", ci(            # Same here
d(d,w,b,e,$,^)      # Cut whole line, next word, prev word, end of word, eol, sol
                    # All of them can be combined with search d/Foo will delete till the first occurrence of Foo  
diw                 # Delete current word
di( of di"          # Delete something in () or ""                    
dib, diB            # Delete inside (), {} block
dab, daB            # Delete a (), {} block
D                   # Delete from here to the eol
p                   # Paste
c                   # Delete the whole word
xp                  # Cut a symbol and paste it back, actually switch two letters
u                   # Undo
Ctrl+r              # Redo

### Command Mode ###
w                   # To save the file
w filename          # Save the file and name it filename
pwd                 # Show current path
e .                 # Shows a list of files with possibility to navigate through them 
e!                  # Reload current file and reset all unchanged changes
e filename          # Edit a file called filename
:set incsearch      # Turn on incremental search
:set noincsearch    # Turn off incremental search


### Search mode ###
* or n              # Move to the next found item
# or Shift+n        # Move to the previous found item


### Replace ###
:[address]s/[search]/[repl]/[gcie] - Поиск [search] и замена на [repl] (в режиме VISUAL - без адреса и в выделенной области):
[gcie]:
    [без опций] - первого вхождения (в строке).
    g - все вхождения (в строке).
    c - с запросом подтверждения.
    i - игнорируя регистр.
    e - подавляет сообщение об ошибке, которое возникает, если найденный шаблон не встречается ни одного раза.
[address]:
    % - весь текст.
    1 - первая строка.
    . - текущая строка.
    $ - последняя строка.
    1,3 - между строками 1-3.
    .,$ - от текущей до последней.
:g/search/s/text/new_text/

### Buffers ###
:bn следующий буфер
:bp предыдущий
:ls просмотреть открытые буферы
:b имя_буфера переключиться на буфер, очень удобно комбинируется с табом, к примеру пишем :b domain, жмём таб и нам подставляется открытый iis_domain.cpp
:bd удалить текущий буфер, правда стоит заметить, что если этот буфер единственное окно то vim закроется
:bd имя_буфера удалить буфер по имени
Ctrl-w стрелочки :) - переместиться на окно влево/вправо/вверх/вниз
Сtrl-w o - развернуть окно
Ctrl-w c - закрыть
Ctrl-w s - разделить окно по горизонтали
Ctrl-w v - тоже, только по вертикали
Ctrl-w ] - разделить и перейти на определение чего-то, что под курсором
Ctrl-w f - разделить и в новом окне открыть файл путь к которому находится под курсором

### Tabs ###
:tabe[dit] [file] - создает новую вкладку.
gt - переключается между вкладками.
Ngt - Переходит на вкладку с номером N.
:tab split - создает новую вкладку, в которой будет открыт буфер, редактируемый в данный момент.
:tabn[ext][N] или :tabn[ext][N] - Переходит на вкладку с номером N. Если аргумент N опущен, то переходит на следующую вкладку.
:tabm[ove][N] или :tabm[ove][N] - Перемещает текущую вкладку так, чтобы она стояла после вкладки N.
:tabc[lose] [tab_num] - Закрывает вкладку.
:tabo[nly] - Закрывает все вкладки кроме текущей.
:tabr[ewind] или :tabfir[st] - Открывает первую вкладку.
:tabl[ast] - Открывает последнюю вкладку.
:tabp[revious] - Переходит на предыдущую вкладку.
:tabs - Отображает список вкладок с открытыми в них окнами.

### Foldings ###
zf - создает новую складку (актуально при foldmethod=manual).
zd - удаляет складку, на которой в данный момент находится курсор.
zD - рекурсивно удаляет все складки под курсором.
zE - удаляет все складки в окне.
zo - открыть текущую складку.
zO - открыть текущую складку и все складки внутри нее.
zc - скрыть текущую складку.
zС - скрыть текущую складку и все складки внутри нее.
za - скрыть/открыть текущую складку.
zA - скрыть/открыть текущую складку и все складки внутри нее.


### Plugins ###
## NerdCommenter
,cc                 # Comment line with single line comment
,cm                 # Comment line with multiple line comment
,c<space>           # Toggle comment
,c$                 # Comment till the end of ƒ

## NerdTree
t                   # Open file in a new tab
o,<enter>           # Open file in this tab

## Surround
Normal mode
-----------
ds  - delete a surrounding
cs  - change a surrounding
ys  - add a surrounding
yS  - add a surrounding and place the surrounded text on a new line + indent it
yss - add a surrounding to the whole line
ySs - add a surrounding to the whole line, place it on a new line + indent it
ySS - same as ySs
Visual mode
-----------
s   - in visual mode, add a surrounding
S   - in visual mode, add a surrounding but place text on new line + indent it
Insert mode
-----------
<CTRL-g>s - in insert mode, add a surrounding
<CTRL-g>f - in insert mode, add a new line + surrounding + indent

## Python plugins
]t      -- Jump to beginning of block
]e      -- Jump to end of block
]v      -- Select (Visual Line Mode) block
]<      -- Shift block to left
]>      -- Shift block to right
]#      -- Comment selection
]u      -- Uncomment selection
]c      -- Select current/previous class
]d      -- Select current/previous function
]k      -- Jump to previous line with the same/lower indentation
]j      -- Jump to next line with the same/lower indentation
]K      -- Jump to previous class
]J      -- Jump to next class
]F      -- Jump to previous function
]f      -- Jump to next function

### Tips & Tricks ###
:w !sudo tee %      # To write changes in case of insufficient privileges.
:%y+                # Yank all file into system buffer
y$                  # Yank till the end of line
zz(zt, zb)          # Center current line (top current line, bottom current line)
ZZ                  # Save and close current file
ZQ                  # Close without saving
:.! date            # Launch date command and paste results into editor
:! date             # Launch date command and show the results
da<                 # Delete html tag you are in
*                   # Search for a word, that's under the cursor
.                   # Repeat last change
%                   # Go to the pair parenthesis
gg                  # Go on top
150G                # Go on line 150
f(char)             # Go on char on the right
F(char)             # Go on char on the left
t(char)             # Go before the char on the right
T(char)             # Go before the char on the left
g0                  # Go to the sol
g_                  # Go to the eol
3>>                 # Indent 3 lines
Vjjj -> >           # Indent visually selected number of lines
gt                  # Next tab
gT                  # Prev tab
Ctrl+a              # Pretty indent of php variables and arrays (in Visual Mode)
(g,|g;)             # Move to (previously|next) editing place in text

### Spell checking ###
:set spell          # Enables spellchecking
:set spelllang=en   # Set checking language to english
:set spellsuggest=5 # Show me 5 suggestions for spelling
z=                  # Gives you a list of variants
1z=                 # Replace the word with first occurrence in dictionary list
zg                  # Mark word as good and add it to the dictionary
zG                  # Mark word as good and add it to the internal (clear on exit Vim) dictionary
zug, zuG            # Undo
zw                  # Mark word good and add it to the dictionary
zW                  # Mark word good and add it to the internal (clear on exit Vim) dictionary
zuw, zuW            # Undo
